{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["import type {\n  PlaywrightBrowserLauncher,\n  PlaywrightBrowsers\n} from 'automation-extra'\nimport { addExtraPlaywright, PlaywrightExtra } from 'automation-extra'\nimport * as playwrightCore from 'playwright-core'\nexport * from 'automation-extra'\n\n/**\n * Augment the provided Playwright browser launcher with plugin functionality.\n *\n * Using `addExtra` will always create a fresh PlaywrightExtra instance.\n *\n * @example\n * import playwright from 'playwright'\n * import { addExtra } from 'playwright-extra'\n *\n * const chromium = addExtra(playwright.chromium)\n * chromium.use(plugin)\n *\n * @param launcher - Playwright (or compatible) browser launcher\n */\nexport const addExtra = (\n  launcher: PlaywrightBrowserLauncher\n): PlaywrightExtra => addExtraPlaywright(launcher)\n\nconst makeProduct = (name: PlaywrightBrowsers): PlaywrightExtra => {\n  const launcher = new PlaywrightExtra(name) // So we know what to require later\n  return launcher\n}\n\n/**\n * This object can be used to launch or connect to Chromium, returning instances of ChromiumBrowser.\n *\n * The **default exports** will behave exactly the same as the regular playwright\n * (just with extra plugin functionality) and can be used as a drop-in replacement.\n *\n * Behind the scenes it will try to require either `playwright`\n * or `playwright-core` from the installed dependencies.\n *\n * Please note that due to imports being cached this will result in a single\n * PlaywrightExtra instance, even when used in different files. If you need multiple\n * instances (e.g. different plugins) please use `addExtra`.\n *\n * @example\n * // javascript import\n * const { chromium } = require('playwright-extra')\n *\n * // typescript/es6 module import\n * import { chromium } from 'playwright-extra'\n *\n * // Add plugins\n * chromium.use(...)\n */\nexport const chromium = makeProduct('chromium')\n/** This object can be used to launch or connect to Firefox, returning instances of FirefoxBrowser. */\nexport const firefox = makeProduct('firefox')\n/** This object can be used to launch or connect to WebKit, returning instances of WebKitBrowser. */\nexport const webkit = makeProduct('webkit')\n\n/** Returns playwright specific errors */\nexport const errors = playwrightCore.errors\n/** Selectors can be used to install custom selector engines. */\nexport const selectors = playwrightCore.selectors\n/** Returns a list of devices to be used with browser.newContext([options]) or browser.newPage([options]). */\nexport const devices = playwrightCore.devices\n\nexport default {\n  addExtra,\n  chromium,\n  firefox,\n  webkit,\n  errors,\n  selectors,\n  devices\n}\n"],"names":[],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;MAca,QAAQ,GAAG,CACtB,QAAmC,KACf,kBAAkB,CAAC,QAAQ,EAAC;AAElD,MAAM,WAAW,GAAG,CAAC,IAAwB;IAC3C,MAAM,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAA;IAC1C,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED;;;;;;;;;;;;;;;;;;;;;;;MAuBa,QAAQ,GAAG,WAAW,CAAC,UAAU,EAAC;AAC/C;MACa,OAAO,GAAG,WAAW,CAAC,SAAS,EAAC;AAC7C;MACa,MAAM,GAAG,WAAW,CAAC,QAAQ,EAAC;AAE3C;MACa,MAAM,GAAG,cAAc,CAAC,OAAM;AAC3C;MACa,SAAS,GAAG,cAAc,CAAC,UAAS;AACjD;MACa,OAAO,GAAG,cAAc,CAAC,QAAO;AAE7C,YAAe;IACb,QAAQ;IACR,QAAQ;IACR,OAAO;IACP,MAAM;IACN,MAAM;IACN,SAAS;IACT,OAAO;CACR;;;;;"}